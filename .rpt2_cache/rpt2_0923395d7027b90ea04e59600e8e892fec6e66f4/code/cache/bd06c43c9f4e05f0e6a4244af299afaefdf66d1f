{
  "code": "import BaseProxy from \"./BaseProxy\";\r\nimport AppConstants from \"../../AppConstants\";\r\nimport GameData from \"../data/GameData\";\r\nimport MyLocalStorage from \"../data/MyLocalStorage\";\r\nvar Browser = Laya.Browser;\r\nexport default class LoginProxy extends BaseProxy {\r\n    constructor(proxyName, data) {\r\n        super(LoginProxy.NAME, data);\r\n    }\r\n    login(message) {\r\n        if (Browser.onMiniGame) {\r\n            window.platform.i.login({\r\n                success: (result) => {\r\n                },\r\n                fail: () => {\r\n                },\r\n                complete: () => {\r\n                },\r\n            });\r\n        }\r\n    }\r\n    serverLogin(code) {\r\n        let userServer = false;\r\n        if (userServer) {\r\n            this.send({ url: \"/xxx/xxx\", code: code }, () => {\r\n            });\r\n        }\r\n        else {\r\n            MyLocalStorage.i.read();\r\n            GameLocalStorage.ins.getDataByKey(GameLocalStorage.USER, (usr) => {\r\n                if (usr) {\r\n                    SMHelper.ins.assignObject(this.user, usr);\r\n                }\r\n                GameData.ins.user.init();\r\n                if (callBack)\r\n                    callBack();\r\n                let isSameDay = true;\r\n                if (GameData.ins.user.loginDays) {\r\n                    isSameDay = TimeTrans.ins.timeStampIsSameDay(GameData.ins.user.loginTimeStamp, Browser.now());\r\n                    if (!isSameDay)\r\n                        this.updateNewDays();\r\n                }\r\n                else {\r\n                    this.updateNewDays();\r\n                }\r\n            });\r\n        }\r\n        GameData.ins.init(() => {\r\n            this.sendNotification(AppConstants.LOGIN_SUCCESS, { data: \"OK\" });\r\n        });\r\n    }\r\n}\r\nLoginProxy.NAME = \"LoginProxy\";\r\n//# sourceMappingURL=LoginProxy.js.map",
  "references": [
    "/jsroads/blog/layademo-puremvc/src/model/proxy/BaseProxy.ts",
    "/jsroads/blog/layademo-puremvc/src/AppConstants.ts",
    "/jsroads/blog/layademo-puremvc/src/model/data/GameData.ts",
    "/jsroads/blog/layademo-puremvc/src/model/data/MyLocalStorage.ts"
  ],
  "map": "{\"version\":3,\"file\":\"LoginProxy.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/model/proxy/LoginProxy.ts\"],\"names\":[],\"mappings\":\"AAIA,OAAO,SAAS,MAAM,aAAa,CAAC;AACpC,OAAO,YAAY,MAAM,oBAAoB,CAAC;AAC9C,OAAO,QAAQ,MAAM,kBAAkB,CAAC;AACxC,OAAO,cAAc,MAAM,wBAAwB,CAAC;AACpD,IAAO,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AAE9B,MAAM,CAAC,OAAO,OAAO,UAAW,SAAQ,SAAS;IAG7C,YAAY,SAAkB,EAAE,IAAU;QACtC,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACjC,CAAC;IAEM,KAAK,CAAC,OAAY;QACrB,IAAI,OAAO,CAAC,UAAU,EAAE;YACpB,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC;gBACpB,OAAO,EAAE,CAAC,MAAM,EAAE,EAAE;gBAEpB,CAAC;gBACD,IAAI,EAAE,GAAG,EAAE;gBAEX,CAAC;gBACD,QAAQ,EAAE,GAAG,EAAE;gBAEf,CAAC;aACJ,CAAC,CAAA;SACL;IAEL,CAAC;IAEM,WAAW,CAAC,IAAa;QAC5B,IAAI,UAAU,GAAG,KAAK,CAAC;QACvB,IAAI,UAAU,EAAE;YACZ,IAAI,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,EAAC,EAAE,GAAG,EAAE;YAE9C,CAAC,CAAC,CAAA;SACL;aAAM;YACH,cAAc,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;YAGxB,gBAAgB,CAAC,GAAG,CAAC,YAAY,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE;gBAC7D,IAAI,GAAG,EAAE;oBACL,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;iBAC7C;gBACD,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;gBACzB,IAAI,QAAQ;oBAAE,QAAQ,EAAE,CAAC;gBACzB,IAAI,SAAS,GAAG,IAAI,CAAC;gBACrB,IAAI,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE;oBAC7B,SAAS,GAAG,SAAS,CAAC,GAAG,CAAC,kBAAkB,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,cAAc,EAAE,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;oBAC9F,IAAI,CAAC,SAAS;wBAAE,IAAI,CAAC,aAAa,EAAE,CAAC;iBACxC;qBAAM;oBACH,IAAI,CAAC,aAAa,EAAE,CAAC;iBAExB;YACL,CAAC,CAAC,CAAC;SACN;QACD,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE;YACnB,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,aAAa,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;QACpE,CAAC,CAAC,CAAC;IACP,CAAC;;AApDa,eAAI,GAAW,YAAY,CAAC\"}"
}
