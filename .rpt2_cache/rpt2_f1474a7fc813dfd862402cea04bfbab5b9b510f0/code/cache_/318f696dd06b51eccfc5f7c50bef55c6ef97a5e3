{
  "code": "import { ui } from \"../../ui/layaMaxUI\";\r\nimport { PayOnOff } from \"../../model/data/PayOnOff\";\r\nimport { ApplicationFacade } from \"../../ApplicationFacade\";\r\nimport LoadingMadiator from \"./LoadingMadiator\";\r\nimport MyConfig from \"../../com/config/MyConfig\";\r\nimport ResManager from \"../../com/config/ResManager\";\r\nimport { LoadHelper } from \"../../com/utils/LoadHelper\";\r\nimport { ShareMessage } from \"../../com/utils/ShareMessage\";\r\nvar Event = Laya.Event;\r\nvar Handler = Laya.Handler;\r\nvar Browser = Laya.Browser;\r\nvar Tween = Laya.Tween;\r\nvar LoadUI = ui.smile.LoadUI;\r\nexport default class LoadingView extends LoadUI {\r\n    constructor() {\r\n        super();\r\n        this.autoDestroyAtClosed = true;\r\n    }\r\n    static loadSub() {\r\n        let mediator = ApplicationFacade.getInstance().retrieveMediator(LoadingMadiator.NAME);\r\n        mediator.getViewComponent().loadSubpackages();\r\n    }\r\n    onAwake() {\r\n        this.size(MyConfig.width, MyConfig.height);\r\n        this.bar.value = 0;\r\n        this.bar.changeHandler = new Handler(this, this.changeValue, null, false);\r\n        Laya.loader.on(Event.ERROR, this, (e) => {\r\n            console.log(\"loaderError:\" + JSON.stringify(e));\r\n        });\r\n        let assets = ResManager.ins.assets;\r\n        let options = assets.resourceOptions, resList = [], info = assets.baseInfo;\r\n        for (let key in options) {\r\n            resList.push(options[key]);\r\n            let tempRes = Laya.loader.getRes(options[key]);\r\n            if (tempRes) {\r\n                Laya.loader.clearRes(options[key]);\r\n            }\r\n        }\r\n        resList.push(\"img_empty.png\");\r\n        Laya.loader.load(resList, Handler.create(null, (sucess) => {\r\n            if (sucess) {\r\n                let mypay = Laya.loader.getRes(\"res/json/cloud/mypay.json\");\r\n                PayOnOff.bannerId = mypay.bannerId;\r\n                PayOnOff.shortVideoId = mypay.shortVideoId;\r\n                PayOnOff.longVideoId = mypay.longVideoId;\r\n                PayOnOff.passThousand = mypay.passThousand;\r\n                PayOnOff.close = mypay.close;\r\n                let list = LoadHelper.ins.parseSources(ResManager.ins.assets);\r\n                if (!Browser.onMiniGame) {\r\n                    let subList = LoadHelper.ins.parseSources(ResManager.ins.assets.subpackage_files);\r\n                    list = list.concat(subList);\r\n                }\r\n                Laya.loader.load(list, Handler.create(this, (sucess) => {\r\n                    if (sucess) {\r\n                        if (Browser.onMiniGame) {\r\n                            ShareMessage.menuShareMessage();\r\n                            console.log(\"smile------开放域:\" + JSON.stringify(\"发送数据\"));\r\n                            Laya.MiniAdpter.sendAtlasToOpenDataContext(\"res/atlas/rank.atlas\");\r\n                            Laya.MiniAdpter.sendSinglePicToOpenDataContext(\"rank/fontclip_rank.png\");\r\n                            ResManager.ins.subPackage = [\r\n                                {\r\n                                    \"name\": \"spine\",\r\n                                    \"root\": \"subpackage/spine/\"\r\n                                },\r\n                                {\r\n                                    \"name\": \"mic\",\r\n                                    \"root\": \"subpackage/mic/\"\r\n                                },\r\n                                {\r\n                                    \"name\": \"subinit\",\r\n                                    \"root\": \"subinit.js\"\r\n                                }\r\n                            ];\r\n                            this.loadSubpackages();\r\n                        }\r\n                    }\r\n                }), this.bar.changeHandler);\r\n            }\r\n        }));\r\n    }\r\n    onEnable() {\r\n        this.alpha = 0;\r\n        this.zOrder = 1200;\r\n        this.size(MyConfig.width, MyConfig.height);\r\n        Tween.to(this, { alpha: 1 }, 50);\r\n    }\r\n    changeValue(progress) {\r\n        if (this.bar && this.bar.value >= 1) {\r\n            if (!Browser.onMiniGame) {\r\n                this.bar.value = 1;\r\n                this.bar.changeHandler.clear();\r\n                this.event(LoadingView.LOAD_COMPLETE);\r\n            }\r\n            else {\r\n                this.bar.value = 0;\r\n            }\r\n            return;\r\n        }\r\n        if (this.bar) {\r\n            this.bar.value = progress;\r\n        }\r\n    }\r\n    loadSubpackages() {\r\n        let packages = ResManager.ins.subPackage, count = 0;\r\n        if (!packages.length) {\r\n            console.log(\"smile------:\" + JSON.stringify(\"分包已经加载成功\"));\r\n            this.bar.changeHandler.clear();\r\n            this.event(LoadingView.LOAD_COMPLETE);\r\n            return;\r\n        }\r\n        let url = packages.shift()[\"name\"];\r\n        let loadTask = window.platform.ins.loadSubpackage({\r\n            name: url,\r\n            success: function (res) {\r\n                LoadingView.loadSub();\r\n            },\r\n            fail: function (res) {\r\n            },\r\n            complete: function (res) {\r\n            }\r\n        });\r\n        loadTask.onProgressUpdate((res) => {\r\n            this.bar.value = res.progress / 100;\r\n            console.log('下载进度', res.progress);\r\n        });\r\n    }\r\n    compareVersion(v1, v2) {\r\n        v1 = v1.split('.');\r\n        v2 = v2.split('.');\r\n        const len = Math.max(v1.length, v2.length);\r\n        while (v1.length < len) {\r\n            v1.push('0');\r\n        }\r\n        while (v2.length < len) {\r\n            v2.push('0');\r\n        }\r\n        for (let i = 0; i < len; i++) {\r\n            const num1 = parseInt(v1[i]);\r\n            const num2 = parseInt(v2[i]);\r\n            if (num1 > num2) {\r\n                return 1;\r\n            }\r\n            else if (num1 < num2) {\r\n                return -1;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n}\r\nLoadingView.LOAD_COMPLETE = \"load_complete\";\r\n",
  "references": [
    "/jsroads/blog/layademo-puremvc/src/ui/layaMaxUI.ts",
    "/jsroads/blog/layademo-puremvc/src/model/data/PayOnOff.ts",
    "/jsroads/blog/layademo-puremvc/src/ApplicationFacade.ts",
    "/jsroads/blog/layademo-puremvc/src/view/loading/LoadingMadiator.ts"
  ]
}
